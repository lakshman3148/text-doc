terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.79.0"
    }
  }
}

provider "aws" {
  region = "us-west-2"
  profile = "default"
}

resource "aws_instance" "server-1" {
  ami           = "ami-055e3d4f0bbeb5878"
  instance_type = "t2.micro"
  key_name      = "gaya3"
  vpc_security_group_ids = [aws_security_group.my-sg.id]
  subnet_id = aws_subnet.subnet-1.id
  user_data = <<EOF
#!/bin/bash
sudo yum update -y
sudo yum install -y httpd
sudo systemctl enable httpd
sudo service httpd start
echo "<h1> hello everyone ! Never dream for success work for it</h1>" | sudo tee /var/www/html/index.html
EOF
  tags = {
    Name = "s1"
  }
}
resource "aws_instance" "server-2" {
  ami           = "ami-055e3d4f0bbeb5878"
  instance_type = "t2.micro"
  key_name      = "gaya3"
  vpc_security_group_ids = [aws_security_group.my-sg.id]
  subnet_id = aws_subnet.subnet-2.id
  user_data = <<EOF
#!/bin/bash
sudo yum update -y
sudo yum install -y httpd
sudo systemctl enable httpd
sudo service httpd start
echo "<h3>  no pain no gain</h3>" | sudo tee /var/www/html/index.html
EOF

  tags = {
    Name = "s2"
  }
}

resource "aws_lb_target_group" "tg" {
  name     = "lucky-tg"
  port     = 80
  protocol = "HTTP"
  target_type = "instance"
  vpc_id   = aws_vpc.my-vpc.id
}

resource "aws_vpc" "my-vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "subnet-1" {
  vpc_id = aws_vpc.my-vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-west-2a"
  map_public_ip_on_launch = true
}


resource "aws_internet_gateway" "my-vpc-igw" {
  vpc_id = aws_vpc.my-vpc.id
}

resource "aws_route_table" "my-vpc-public-route-table" {
  vpc_id = aws_vpc.my-vpc.id
}

resource "aws_route" "my-vpc-public-route" {
  route_table_id = aws_route_table.my-vpc-public-route-table.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id = aws_internet_gateway.my-vpc-igw.id
}


resource "aws_route_table_association" "my-vpc-public-route-table-associate" {
  route_table_id = aws_route_table.my-vpc-public-route-table.id
  subnet_id = aws_subnet.subnet-1.id
}

resource "aws_subnet" "subnet-2" {
  vpc_id = aws_vpc.my-vpc.id
  cidr_block = "10.0.2.0/24"
  availability_zone = "us-west-2b"
  map_public_ip_on_launch = true
}

resource "aws_route_table" "my-vpc-public-route-table-2" {
  vpc_id = aws_vpc.my-vpc.id
}

resource "aws_route" "my-vpc-public-route-2" {
  route_table_id = aws_route_table.my-vpc-public-route-table-2.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id = aws_internet_gateway.my-vpc-igw.id
}


resource "aws_route_table_association" "my-vpc-public-route-table-associate-2" {
  route_table_id = aws_route_table.my-vpc-public-route-table-2.id
  subnet_id = aws_subnet.subnet-2.id
}


resource "aws_lb" "alb" {
  name               = "lucky-lb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.my-sg.id]
  subnets            = [aws_subnet.subnet-1.id,aws_subnet.subnet-2.id]
}
